В main.py в функции main() нужно указать путь к данным, которые необходимо обработать +
путь где их сохранить.


Мы рассчитываем 2 угла по Х и У, которые можно использовать для донаводки камеры. + мы считаем
относительный размер коробки объекта = диагональ коробки / на диагональ кадра. Это число можно
использовать для определения размера зума. Чем меньше отношение, тем меньше объект, тем больше
надо зазумиться на него.


ПРОБЛЕМЫ:
- Модель не тренировалась на данных с ракурса когда дрон сидит/едет по проводу. Поэтому она
много пропускает. Как будут данные в хорошем качестве, не с RamCam маленькой камеры перетренируем
- Нейронка тренировалась на видео со спарка и фотографиях высокого разрешения. Если на дроне
будет стоят плохая камера низкого разрешения (аля оранжевый RanCam Кирилла), то опять же будет
работать плохо
- Скорость. Мы взяли готовую реализацию ЙОЛО у OpenCV. У них расчеты по дефолту идут на СПУ,
поэтому скорость работы низкая. Можно заморочиться и взять реализацию на PyTorch, которая позволяет
использовать CUDA для расчётов, однако я не знаю если Jetson потянет это дело.